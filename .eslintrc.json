{
  "extends": [
    "plugin:vue/recommended",
    "eslint:all",
    "@vue/typescript",
    "plugin:@typescript-eslint/all",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "plugins": [
    "only-warn"
  ],
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    "@typescript-eslint/indent": ["error", 2], //replace 4 spaces
    "import/no-named-as-default": "error", //is not part of default sert
    "@typescript-eslint/no-inferrable-types": "off", // @typescript-eslint/typedef
    "@typescript-eslint/no-unused-vars-experimental": "off", // doesn't work with vue
    "init-declarations": "off", // poor choice
    "one-var": "off", // poor choice
    "multiline-comment-style": "error", // turned off by default
    "@typescript-eslint/no-untyped-public-signature": "off", // this breaks a lot: constructions public, ES6 setter should have return type etc
    "@typescript-eslint/ban-ts-ignore": "off", // who cares, we explicitly define it.
    "no-plusplus": "off", // too aggresive
    "quote-props": ["error", "as-needed"],
    "no-ternary": "off", // to aggressive
    "multiline-ternary": "off",
    "new-cap": ["error", {"capIsNewExceptions":  ["Module", "Component", "Prop", "Ref", "Emit"]}],
    "@typescript-eslint/space-before-function-paren": ["error", "never"],
    "@typescript-eslint/strict-boolean-expressions": "off",
    "array-element-newline": ["error", "consistent"],
    "comma-dangle": ["error", "always-multiline"],
    "function-call-argument-newline": ["error", "consistent"],
    "max-len": ["error", { "code": 120 }], // override 80 that is too low
    "import/no-unresolved": "off",
    "padded-blocks": ["error", "never"],
    "import/no-relative-parent-imports": "error",
    "vue/html-self-closing": [
      "error",
      {
        "html": {
          "void": "always", // vue-ts template requires valid xml <this> is not valid but <this/> is
          "normal": "always",
          "component": "always"
        }
      }
    ]
  }
}
