{
  "extends": [
    "plugin:vue/recommended",
    "eslint:all",
    "@vue/typescript",
    "plugin:@typescript-eslint/all",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "plugins": [
    "only-warn"
  ],
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "@typescript-eslint/parser",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    "init-declarations": "off", // poor choice
    "one-var": "off", // poor choice
    "multiline-comment-style": "error", // turned off by default
    "no-plusplus": "off", // too aggresive
    "quote-props": ["error", "as-needed"],
    "no-ternary": "off", // to aggressive
    "multiline-ternary": "off",
    "new-cap": ["error", {"capIsNewExceptions":  ["Module", "Component", "Prop", "Ref", "Emit"]}],
    "array-element-newline": ["error", "consistent"],
    "comma-dangle": ["error", "always-multiline"],
    "function-call-argument-newline": ["error", "consistent"],
    "max-len": ["error", { "code": 120 }], // override 80 that is too low
    "padded-blocks": ["error", "never"],
    "@typescript-eslint/no-untyped-public-signature": "off", // this breaks a lot: constructions public, ES6 setter should have return type etc
    "@typescript-eslint/ban-ts-ignore": "off", // who cares, we explicitly define it.
    "@typescript-eslint/space-before-function-paren": ["error", "never"],
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/indent": ["error", 2], //replace 4 spaces
    "@typescript-eslint/no-inferrable-types": "off", // @typescript-eslint/typedef
    "@typescript-eslint/no-unused-vars-experimental": "off", // doesn't work with vue
    "import/no-named-as-default": "error", //is not part of default sert
    "import/no-unresolved": "off",
    "import/no-relative-parent-imports": "error",
    "import/dynamic-import-chunkname": "error",
    "import/exports-last":"error",
    "import/extensions": ["error", "never", {"json":  "always", "vue": "always"}], // w/o  extensiosn ts would not work
    "import/first":"error",
    "import/group-exports": "error",
    "import/max-dependencies":"error",
    "import/newline-after-import": "error",
    "import/no-absolute-path":"error",
    "import/no-amd": "error",
    "import/no-anonymous-default-export":"error",
    "import/no-commonjs": "error",
    "import/no-cycle":"error",
    "import/no-default-export": "off", // doesn't work with .vue
    "import/no-deprecated":"error",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies":"error",
    "import/no-internal-modules": "error",
    "import/no-mutable-exports":"error",
    "import/no-named-default": "error",
    "import/no-named-export":"off", // we want them
    "import/no-namespace": "error",
    "import/no-nodejs-modules":"error",
    "import/no-restricted-paths": "error",
    "import/no-self-import":"error",
    "import/no-unassigned-import": "error",
    "import/no-unused-modules":"error",
    "import/no-useless-path-segments": "error",
    "import/no-webpack-loader-syntax":"error",
    "import/order": "off", // doesn't work with sorted-import
    "import/prefer-default-export":"off", // default exports are hell to IDE refactor support
    "import/unambiguous": "error",
    "vue/array-bracket-spacing":"error",
    "vue/arrow-spacing": "error",
    "vue/block-spacing":"error",
    "vue/brace-style": "error",
    "vue/camelcase":"error",
    "vue/comma-dangle": "off", // comma-spacing works fine
    "vue/component-name-in-template-casing":"error",
    "vue/dot-location": "error",
    "vue/eqeqeq":"error",
    "vue/key-spacing": "error",
    "vue/keyword-spacing":"error",
    "vue/match-component-file-name": "error",
    "vue/no-boolean-default":"error",
    "vue/no-deprecated-scope-attribute": "error",
    "vue/no-empty-pattern":"error",
    "vue/no-restricted-syntax": "error",
    "vue/object-curly-spacing":"error",
    "vue/require-direct-export": "off", // doesn't work with vue-class-comp
    "vue/script-indent":"error",
    "vue/space-infix-ops": "error",
    "vue/space-unary-ops":"error",
    "vue/v-on-function-call": "error",
    "vue/v-slot-style":"error",
    "vue/valid-v-slot": "error",
    "vue/html-self-closing": [
      "error",
      {
        "html": {
          "void": "always", // vue-ts template requires valid xml <this> is not valid but <this/> is
          "normal": "always",
          "component": "always"
        }
      }
    ]
  }
}
