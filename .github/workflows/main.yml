# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # This job is an example of continious integration
  # It runs test and lints the code
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '15.0.1'
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            yarn-cache
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: install npm dependencies
        run: yarn config set cache-folder `pwd`/yarn-cache && yarn install --frozen-lockfile
      - name: build
        run: yarn run build:test:no-progress
      - name: test-cypress
        run: yarn run test:cypress:run:report
      - name: test-unit
        run: yarn run test:unit
      - name: archive coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          path: |
            nyc
      - name: coverage
        run: yarn run test:coverage
      - name: eslint
        run: yarn run lint

  # This job is an example of continious deployment
  # It job above succeeds it will update your production site.
  # Be aware, in this example this job updates the server on pull request, so either move it to another worflow, either remove pull request trigger above
  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '15.0.1'
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            yarn-cache
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: install npm dependencies
        run: yarn --frozen-lockfile
      - name: build static files
        run: yarn build:prod:no-progress
      - name: archive static files
        uses: actions/upload-artifact@v2
        with:
          path: |
            dist
      - name: copy static files to destination server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: dist
          remote: /srv/http/vue/dist
          # In order for credentials to work you need to put them into github settings https://github.com/USERNAME/REPOSITORY/settings/actions
          # Check credentials description in https://github.com/garygrossgarten/github-action-scp
          # I prefer using new pair of ssh keys, instead of exposing password to github
          # Generate new keypair with: ssh-keygen -t rsa -b 4096 -C "vue-webpack-typescript-github-actions" -f  /tmp/id_rsa
          # Put /tmp/id_rsa.pub into server ~/.ssh/authorized_keys
          # And /tmp/id_rsa.pub into github secrets with key ID_RSA (link is above)
          # Also create github secret with keys HOST, PORT (default is 22), SSH_USER
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.SSH_USER }}
          privateKey : ${{ secrets.ID_RSA }}
